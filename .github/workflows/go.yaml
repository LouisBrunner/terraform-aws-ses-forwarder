name: Build a Go project

on:
  push:
  pull_request:

jobs:
  vet:
    runs-on: ubuntu-latest
    name: Vet code
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"

      - name: Vet
        run: |
          make vet
        shell: bash

  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"

      - name: Test
        run: |
          make test-ci
        shell: bash

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: report.xml
          check_name: Tests results

      - name: Coverage
        run: |
          make coverage-ci
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-rebuild:
    runs-on: ubuntu-latest
    name: Check rebuild
    if: ${{ (github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v')) }}
    steps:
      - name: Nothing for now
        run: |
          echo "Nothing to do"
        shell: bash

  metadata:
    runs-on: ubuntu-latest
    name: Get metadata
    outputs:
      image_tags: ${{ steps.parse-tag.outputs.tag }}
    steps:
      - uses: aica-technology/.github/.github/actions/docker-tag-from-git@v0.10.2
        id: parse-tag

  build:
    needs: [check-rebuild, metadata, vet, test]
    runs-on: ubuntu-latest
    name: Build and publish
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"

      - uses: ko-build/setup-ko@v0.6
        with:
          version: v0.15.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build using ko
        run: |
          export DOCKER_IMAGE_PREFIX=ghcr.io/louisbrunner
          export DOCKER_TAGS=${{ needs.metadata.outputs.image_tags }}
          export DOCKER_PLATFORM=linux/amd64
          make TARGET=aws-ses-forwarder build-push-docker
        shell: bash
